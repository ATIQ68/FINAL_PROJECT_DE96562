#include <LiquidCrystal.h> // includes the LiquidCrystal Library

const int rs=12, en=11, d4=5, d5=4, d6=3, d7=2 ;
LiquidCrystal lcd(rs,en,d4,d5,d6,d7); // Creates an LCD object. Parameters: (rs, enable, d4, d5, d6, d7)
const int trigPin = 10;
const int echoPin = 13;
long duration;//LONG VARIABLE
float distanceCm, distanceInch;
const int cmbuttonPin = 7;
//declaration of all pin we used

void setup(){
lcd.begin(16,2); // Initializes the interface to the LCD screen, and specifies the dimensions (width and height) of the display
lcd.print(" SOCIAL DISTANCE ");
lcd.setCursor(0,1);//FOR SECOND LINE OF LCD
lcd.print(" FINAL PROJECT");
delay(2);
pinMode(cmbuttonPin, INPUT);
pinMode(trigPin, OUTPUT);
pinMode(echoPin, INPUT);
Serial.begin(9600);
}


void loop(){
  int value = digitalRead(cmbuttonPin); 
    digitalWrite(trigPin, LOW);
    delay(2);
    digitalWrite(trigPin, HIGH);
    delay(10);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH);
  
  if (value == HIGH){
	distanceCm= duration*0.0344/2;
    lcd.setCursor(0,1);//FOR SECOND LINE OF LCD
    lcd.print("YOUR MEASUREMENT ");
    lcd.setCursor(0,0); // Sets the location at which subsequent text written to the LCD will be displayed
    lcd.print("Distance:"); // Prints string "Distance" on the LCD
    lcd.print(distanceCm); // Prints the distance value from the sensor
    lcd.print("cm");
    delay(10);
 }
  else
  {
	distanceInch = duration*0.000344/2;
    lcd.setCursor(0,0);//FOR SECOND LINE OF LCD
    lcd.print(" SOCIAL DISTANCE ");
    delay(2);
    lcd.setCursor(0,1);
    lcd.print("Distance:");
    lcd.print(distanceInch);
    lcd.print("  m");
    delay(10);
    Serial.println("distanceInch= ");
  }
}
**************************************************************
int buttonState = 0;

void setup()
{
  pinMode(2, INPUT);
  pinMode(13, OUTPUT);
}

void loop()
{
  // read the state of the pushbutton
  buttonState = digitalRead(2);
  // check if pushbutton is pressed. if it is, the
  // button state is HIGH
  if (buttonState == HIGH) {
    digitalWrite(13, HIGH);
  } else {
    digitalWrite(13, LOW);
  }
  delay(10); // Delay a little bit to improve simulation performance
}
*******************************************************
TITTLE: ARDUINO DISTANCE MEASUREMENT (FINAL PROJECT)
NAME: MUHAMMAD 'ATIQULHAKIM BIN MOHD RAMLI
STUDENT ID: DE96562
SUBJECT: INTRODUCTION TO MICROCONTROLLER
SUBJECT CODE: EEED253
UNIVERSITY: UNIVERSITI TENAGA NASIONAL (UNITEN)
TITTLE: ARDUINO DISTANCE MEASUREMENT (FINAL PROJECT)
NAME: MUHAMMAD 'ATIQULHAKIM BIN MOHD RAMLI
STUDENT ID: DE96562
SUBJECT: INTRODUCTION TO MICROCONTROLLER
SUBJECT CODE: EEED253
UNIVERSITY: UNIVERSITI TENAGA NASIONAL (UNITEN)


******************ALL LINK***************************
GITHIB: https://github.com/ATIQ68/FINAL_PROJECT_DE96562

PUSHBUTTON: https://www.newark.com/omron-electronic-components/b3f-1000/switch-tactile-spst-no-50ma-though/dp/36K7138?COM=ref_hackste

ARDUINO UNO: https://shopee.com.my/search?keyword=arduino%20uno

LCD 16x2: https://shopee.com.my/LCD1602-Blue-Backlight-Liquid-Crystal-Display-Module-LCD-1602-For-Arduino-With-Soldered-Pin-i.132528683.2015975137

ULTRASONIC SENSOR: https://shopee.com.my/HC-SR04-Ultrasonic-Sensor-Distance-Module-Range-Sensor-Arduino-UNO-ESP8266-ESP32-IOT-sensor-FYP-i.226496061.7717911932

WIRE CONNECTOR: https://store.arduino.cc/usa/10-jumper-wires-150mm-male

